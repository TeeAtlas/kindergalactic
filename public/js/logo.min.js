let animationFrame,lastMouseX=0,lastMouseY=0;const MOVEMENT_LIMIT_PERCENTAGE=70,BLINK_MIN_INTERVAL=3e3,BLINK_MAX_INTERVAL=6e3,BLINK_FRAMES=12,BOTH_EYES_BLINK_CHANCE=.95,pupils=document.querySelectorAll(".pupil"),eyeMasks=document.querySelectorAll(".eye-mask"),eyeData=Array.from(document.querySelectorAll(".eye")).map(((e,t)=>{const a=pupils[t],r=eyeMasks[t];if(a&&r){const t=parseFloat(e.getAttribute("cx")),s=parseFloat(e.getAttribute("cy")),n=parseFloat(e.getAttribute("rx")),i=parseFloat(e.getAttribute("ry")),l=parseFloat(a.getAttribute("r"));return{pupil:a,eye:e,eyeMask:r,eyeCX:t,eyeCY:s,maxMoveX:70*(n-l)*.01,maxMoveY:70*(i-l)*.01,ryOriginal:i,ryCurrent:i,blinkFrame:0}}})).filter(Boolean),svg=document.querySelector("svg"),svgPoint=svg.createSVGPoint(),getRelativeCoordinates=(e,t)=>(svgPoint.x=e,svgPoint.y=t,svgPoint.matrixTransform(svg.getScreenCTM().inverse())),updateBlinks=()=>{for(let e=0;e<eyeData.length;e++){const t=eyeData[e];if(t.blinkFrame>0){const e=6;let a;a=t.blinkFrame<=e?t.blinkFrame/e:(12-t.blinkFrame)/e,a=.5-.5*Math.cos(a*Math.PI),t.ryCurrent=t.ryOriginal*(1-.98*a),t.eye.setAttribute("ry",t.ryCurrent),t.eyeMask.setAttribute("ry",t.ryCurrent),t.blinkFrame--,0===t.blinkFrame&&(t.ryCurrent=t.ryOriginal,t.eye.setAttribute("ry",t.ryCurrent),t.eyeMask.setAttribute("ry",t.ryCurrent))}}},scheduleNextBlink=()=>{const e=3e3+3e3*Math.random();setTimeout((()=>{if(Math.random()<.95)eyeData.forEach((e=>{0===e.blinkFrame&&(e.blinkFrame=12)}));else{const e=eyeData[Math.floor(Math.random()*eyeData.length)];0===e.blinkFrame&&(e.blinkFrame=12)}scheduleNextBlink()}),e)},updatePupils=(e,t)=>{for(let a=0;a<eyeData.length;a++){const r=eyeData[a],s=e-r.eyeCX,n=t-r.eyeCY,i=s/r.maxMoveX,l=n/r.maxMoveY,o=i*i+l*l;let u,y;if(o<=1)u=r.eyeCX+s,y=r.eyeCY+n;else{const e=1/Math.sqrt(o);u=r.eyeCX+s*e,y=r.eyeCY+n*e}r.pupil.setAttribute("cx",u),r.pupil.setAttribute("cy",y)}},animate=()=>{updateBlinks(),updatePupils(lastMouseX,lastMouseY),requestAnimationFrame(animate)};requestAnimationFrame(animate),scheduleNextBlink(),document.addEventListener("mousemove",(e=>{const t=getRelativeCoordinates(e.clientX,e.clientY);lastMouseX=t.x,lastMouseY=t.y}),{passive:!0}),document.addEventListener("touchmove",(e=>{e.preventDefault();const t=e.touches[0],a=getRelativeCoordinates(t.clientX,t.clientY);lastMouseX=a.x,lastMouseY=a.y}));
